global:
  imagePullSecrets: image-pull-secret

ingress:
  enabled: true
  ingressClassName: nginx
  path: /
  pathType: Prefix
  hosts: argocd.app.grafana.localdev.me

resources:
  requests:
    memory: "256Mi"
    cpu: "200m"
  limits:
    memory: "1024Mi"
    cpu: "1000m"

datasources:
  datasources.yaml:
    apiVersion: 1
    datasources:
      - name: InfluxDB_v2_Flux
        type: influxdb
        access: proxy
        url: http://10.0.0.16:8086
        isDefault: true
        jsonData:
          version: Flux
          organization: FuncTestOrg
          defaultBucket: FuncTestBucket
          tlsSkipVerify: true
        secureJsonData:
          token: FuncTestToken

dashboardProviders:
  dashboardproviders.yaml:
    apiVersion: 1
    providers:
      - name: "default"
        orgId: 1
        folder: ""
        type: file
        disableDeletion: false
        updateIntervalSeconds: 10
        allowUiUpdates: true
        editable: true
        options:
          path: /var/lib/grafana/dashboards/default

dashboards:
  default:
    performance-test-dashboard:
      json: |
        {
          "editable": true,
          "fiscalYearStartMonth": 0,
          "graphTooltip": 0,
          "id": 1,
          "links": [],
          "liveNow": false,
          "panels": [
            {
              "datasource": {
                "type": "influxdb",
                "name": "InfluxDB_v2_Flux"
              },
              "fieldConfig": {
                "defaults": {
                  "color": {
                    "mode": "palette-classic"
                  },
                  "custom": {
                    "axisCenteredZero": false,
                    "axisColorMode": "text",
                    "axisLabel": "",
                    "axisPlacement": "auto",
                    "barAlignment": 0,
                    "drawStyle": "line",
                    "fillOpacity": 0,
                    "gradientMode": "none",
                    "hideFrom": {
                      "legend": false,
                      "tooltip": false,
                      "viz": false
                    },
                    "lineInterpolation": "linear",
                    "lineWidth": 1,
                    "pointSize": 5,
                    "scaleDistribution": {
                      "type": "linear"
                    },
                    "showPoints": "auto",
                    "spanNulls": false,
                    "stacking": {
                      "group": "A",
                      "mode": "none"
                    },
                    "thresholdsStyle": {
                      "mode": "off"
                    }
                  },
                  "mappings": [],
                  "thresholds": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "green",
                        "value": null
                      },
                      {
                        "color": "red",
                        "value": 80
                      }
                    ]
                  }
                },
                "overrides": []
              },
              "gridPos": {
                "h": 9,
                "w": 12,
                "x": 0,
                "y": 0
              },
              "id": 2,
              "options": {
                "legend": {
                  "calcs": [],
                  "displayMode": "list",
                  "placement": "bottom",
                  "showLegend": true
                },
                "tooltip": {
                  "mode": "single",
                  "sort": "none"
                }
              },
              "targets": [
                {
                  "datasource": {
                    "type": "influxdb",
                    "name": "InfluxDB_v2_Flux"
                  },
                  "query": "from(bucket: v.bucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"jmeter\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")",
                  "refId": "A"
                }
              ],
              "title": "InfluxDB Data",
              "type": "timeseries"
            }
          ],
          "refresh": "5s",
          "schemaVersion": 37,
          "style": "dark",
          "tags": [],
          "templating": {
            "list": []
          },
          "time": {
            "from": "now-6h",
            "to": "now"
          },
          "timepicker": {},
          "timezone": "",
          "title": "Performance Test",
          "version": 1,
          "weekStart": ""
        }

grafana.ini:
  paths:
    data: /var/lib/grafana/
    logs: /var/log/grafana
    plugins: /var/lib/grafana/plugins
    provisioning: /etc/grafana/provisioning
  analytics:
    check_for_updates: true
  log:
    mode: console
  grafana_net:
    url: https://grafana.net
  server:
    domain: "{{ if (and .Values.ingress.enabled .Values.ingress.hosts) }}{{ .Values.ingress.hosts | first }}{{ else }}''{{ end }}"
  auth.ldap:
    enabled: true
    allow_sign_up: true
    skip_org_role_syne: true
    config_file: /etc/grafana/ldap.toml

ldap:
  enabled: true
  config: |-
    [[servers]]
    host = "127.0.0.1"
    port = 389
    use_ssl = false
    start_tls = false
    ssl_skip_verify = true
    bind_dn = "cn=admin,dc=mycompany,dc=org"
    bind_password = "admin"
    search_filter = "(cn=%s)"
    search_base_dns = ["ou=Users,dc=mycompany,dc=org"]

    [servers.attributes]
    name = "givenName"
    surname = "sn"
    username = "cn"
    member_of = "memberOf"
    email =  "email"
